{
    "openapi": "3.0.1",
    "info": {
        "title": "Environment Monitoring API",
        "description": "This API provides information related to Environment Quality, Notices and Forecasts. <h3>Disclaimer</h3> <p>Air quality data comes directly from our air monitoring stations using various types of monitoring equipment and methods. This data may be adjusted later according to set criteria to account for instrument errors, power interruptions and other technical issues.</p> <p>EPA aims to locate our ambient monitoring stations so they give a good representation of the air quality experienced by the public. As most of the Victorian population lives and works close to roads, most of our stations are in population centres next to roads. This can mean we do not always comply with one of the requirements of the Australian Standard for siting (AS 3580.1.1), which specifies that air monitoring stations should be more than 50 metres away from a road. Currently, Footscray is the only EPA air monitoring site that meets this requirement.</p> <p>Click on the following link to see another AirWatch web page describing NATA:</p> <p><a href=\"https://www.epa.vic.gov.au/for-community/monitoring-your-environment/about-epa-airwatch/accreditation-of-epa-air-quality-monitoring\">https://www.epa.vic.gov.au/for-community/monitoring-your-environment/about-epa-airwatch/accreditation-of-epa-air-quality-monitoring</a></p>",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://gateway.api.epa.vic.gov.au/environmentMonitoring/v1"
        }
    ],
    "paths": {
        "/sites/{siteID}/parameters": {
            "get": {
                "summary": "Air Monitoring Site by Id with Scientific Parameters",
                "description": "Returns in a structure suitable for tabular presentation of all air quality measurements for a specified timeline for a single site. It only provides last 48 hours of data.",
                "operationId": "get-parameters-single-site",
                "parameters": [
                    {
                        "name": "siteID",
                        "in": "path",
                        "description": "A 36 digit unique id used to identify a particular site, format:xxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "The start dateTime from when the readings are required provided in RFC3999 format in UTC",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "until",
                        "in": "query",
                        "description": "The end dateTime until when the readings are required provided in RFC3999 format in UTC",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "description": "The interval in hours on which scientific paramters will be returned, if no interval is provided all 1,8 and 24 hours average will be retruened",
                        "schema": {
                            "enum": [
                                "1HR_AV",
                                "8HR_AV",
                                "24HR_AV"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-TransactionID",
                        "in": "header",
                        "description": "Unique ID for the Integration transaction. Generated by the Integration Platform, not the consumer system.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-TrackingID",
                        "in": "header",
                        "description": "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SessionID",
                        "in": "header",
                        "description": "Consumer system's session ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-CreationTime",
                        "in": "header",
                        "description": "Format - date-time (as date-time in RFC3339). The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialSystem",
                        "in": "header",
                        "description": "The system that initiated this transaction. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialComponent",
                        "in": "header",
                        "description": "The first component that was involved in this transaction. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialOperation",
                        "in": "header",
                        "description": "The first operation that was involved in this transaction. This is optional and purely for troubleshooting / analysis purposes.may be tunneled to the provider system for fine-grained access control.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return a single site with all parameters and health advice based on query parameter.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SiteParametersResponse"
                                },
                                "example": {
                                    "siteID": "77062cb7-3e3b-4984-b6d0-03dda76177f2",
                                    "siteName": "Alphington",
                                    "siteType": "Ambient",
                                    "geometry": {
                                        "type": "Point",
                                        "coordinates": [
                                            -37.73973,
                                            144.94615
                                        ]
                                    },
                                    "distance": {
                                        "value": 123,
                                        "unit": "metre"
                                    },
                                    "cameraImageURL": "https://cmcameras.net.au/images/Calignee/snapsho.jpg",
                                    "timeLapseURL": "https://cmcameras.net.au/ images/Calignee/video.mp4",
                                    "siteHealthAdvices": [
                                        {
                                            "since": "2019-07-14T23:00:00.0000000+00:00",
                                            "until": "2019-07-13T23:00:00.0000000+00:00",
                                            "healthParameter": "CO2",
                                            "averageValue": 80,
                                            "unit": "&micro;g/m&sup3;",
                                            "healthAdvice": "Good",
                                            "healthAdviceColor": "#DBDBDBD",
                                            "healthCode": "000001"
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "name": "SO2",
                                            "timeSeriesReadings": [
                                                {
                                                    "timeSeriesName": "1HR_AV",
                                                    "readings": [
                                                        {
                                                            "since": "2019-07-14T23:00:00.0000000+00:00",
                                                            "until": "2019-07-13T23:00:00.0000000+00:00",
                                                            "averageValue": 22,
                                                            "unit": "ppb",
                                                            "confidence": 100,
                                                            "totalSample": 8,
                                                            "healthAdvice": "GOOD",
                                                            "healthAdviceColor": "#DBDBDBD",
                                                            "healthCode": "000001"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 - Bad Request",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "BadRequest"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The request could not be understood by the server due to invalid payload"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401 - Unauthorized",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "UnathorisedAccess"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The request requires user authentication"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 - Forbidden",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "Forbidden"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server understood the request, but is refusing to fulfill it"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404 - Resource Not Found",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "NotFound"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The URI requested is invalid or the resource requested does not exists"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405 - Method not allowed",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "MethodNotAllowed"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "A request was made of a resource using a request method not supported by that resource"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "406 - Not acceptable",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "NotAcceptable"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "415 - Unsupported media type",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "UnsupportedMediaType"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 - Internal Server Error",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "InternalServerError"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server encountered an unexpected condition which prevented it from fulfilling the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "502 - Bad Gateway",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "BadGateway"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server received an invalid response from the upstream server it accessed in attempting to fulfill the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notices": {
            "get": {
                "summary": "Query Notice",
                "description": "Returns a list of notices.",
                "operationId": "get-notice",
                "parameters": [
                    {
                        "name": "environmentalSegment",
                        "in": "query",
                        "description": "Environmental Segment of the search, if no segment is provided it will return all segment notices",
                        "schema": {
                            "enum": [
                                "air",
                                "water"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "expiredDays",
                        "in": "query",
                        "description": "Number of days for which the expired notices need to be returned.If there is no value in this field all active notices would be returned.The valid value range is between 1 to 366",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Latitude and longitude of the location,the query parameter should be in this format [latitude,longitude]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-TransactionID",
                        "in": "header",
                        "description": "Unique ID for the Integration transaction. Generated by the Integration Platform, not the consumer system.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-TrackingID",
                        "in": "header",
                        "description": "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SessionID",
                        "in": "header",
                        "description": "Consumer system's session ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-CreationTime",
                        "in": "header",
                        "description": "Format - date-time (as date-time in RFC3339). The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialSystem",
                        "in": "header",
                        "description": "The system that initiated this transaction. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialComponent",
                        "in": "header",
                        "description": "The first component that was involved in this transaction. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialOperation",
                        "in": "header",
                        "description": "The first operation that was involved in this transaction. This is optional and purely for troubleshooting / analysis purposes.may be tunneled to the provider system for fine-grained access control.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of notices based on query criterias",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoticesHistory"
                                },
                                "example": {
                                    "totalRecords": 1,
                                    "records": [
                                        {
                                            "id": "1afd9459-7e5c-486c-bffc-2b91cacdda16",
                                            "environmentalSegment": "air",
                                            "since": "2019-09-28T01:59:59.0000000+00:00",
                                            "until": "2019-09-28T01:59:59.0000000+00:00",
                                            "shortDescription": "Station offline in Churchill due to technical difficulties",
                                            "longDescription": "<b>Churchill:</b> Monitoring for PM2.5 is offline due to technical difficulties and PM2.5 data is not being collected at this station. EPA technicians are working to fix the problem.",
                                            "isActive": true,
                                            "sortOrder": 125,
                                            "geometry": {
                                                "type": "Point",
                                                "coordinates": [
                                                    -37.73973,
                                                    144.94615
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 - Bad Request",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "BadRequest"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The request could not be understood by the server due to invalid payload"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401 - Unauthorized",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "UnathorisedAccess"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The request requires user authentication"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 - Forbidden",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "Forbidden"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server understood the request, but is refusing to fulfill it"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404 - Resource Not Found",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "NotFound"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The URI requested is invalid or the resource requested does not exists"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405 - Method not allowed",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "MethodNotAllowed"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "A request was made of a resource using a request method not supported by that resource"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "406 - Not acceptable",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "NotAcceptable"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "415 - Unsupported media type",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "UnsupportedMediaType"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 - Internal Server Error",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "InternalServerError"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server encountered an unexpected condition which prevented it from fulfilling the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "502 - Bad Gateway",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "BadGateway"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server received an invalid response from the upstream server it accessed in attempting to fulfill the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sites/{siteID}": {
            "get": {
                "summary": "Air Monitoring Site By Site ID",
                "description": "Provide the details of a single environment monitoring site with current health advice. It only provides last 48 hours of data.",
                "operationId": "get-sites-siteid",
                "parameters": [
                    {
                        "name": "siteID",
                        "in": "path",
                        "description": "A 36 digit unique id used to identify a particular site, format:xxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-TransactionID",
                        "in": "header",
                        "description": "Unique ID for the Integration transaction. Generated by the Integration Platform, not the consumer system.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-TrackingID",
                        "in": "header",
                        "description": "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SessionID",
                        "in": "header",
                        "description": "Consumer system's session ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-CreationTime",
                        "in": "header",
                        "description": "Format - date-time (as date-time in RFC3339). The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialSystem",
                        "in": "header",
                        "description": "The system that initiated this transaction. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialComponent",
                        "in": "header",
                        "description": "The first component that was involved in this transaction. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialOperation",
                        "in": "header",
                        "description": "The first operation that was involved in this transaction. This is optional and purely for troubleshooting / analysis purposes.may be tunneled to the provider system for fine-grained access control.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provide the details of a single environment monitoring site with current health advice. It only provides last 48 hours of data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SiteResponse"
                                },
                                "example": {
                                    "siteID": "b01407a1-62cd-4385-a526-9384fb99d7db",
                                    "siteName": "Alphington",
                                    "siteType": "Ambient",
                                    "geometry": {
                                        "type": "Point",
                                        "coordinates": [
                                            -37.73973,
                                            144.94615
                                        ]
                                    },
                                    "distance": {
                                        "value": 123,
                                        "unit": "metre"
                                    },
                                    "cameraImageURL": "https://cmcameras.net.au/images/Calignee/snapsho.jpg",
                                    "timeLapseURL": "https://cmcameras.net.au/ images/Calignee/video.mp4",
                                    "siteHealthAdvices": [
                                        {
                                            "since": "2019-07-14T23:00:00.0000000+00:00",
                                            "until": "2019-07-13T23:00:00.0000000+00:00",
                                            "healthParameter": "CO2",
                                            "averageValue": 80,
                                            "unit": "&micro;g/m&sup3;",
                                            "healthAdvice": "Good",
                                            "healthAdviceColor": "#DBDBDBD",
                                            "healthCode": "000001"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 - Bad Request",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "BadRequest"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The request could not be understood by the server due to invalid payload"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401 - Unauthorized",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "UnathorisedAccess"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The request requires user authentication"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 - Forbidden",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "Forbidden"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server understood the request, but is refusing to fulfill it"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404 - Resource Not Found",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "NotFound"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The URI requested is invalid or the resource requested does not exists"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405 - Method not allowed",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "MethodNotAllowed"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "A request was made of a resource using a request method not supported by that resource"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "406 - Not acceptable",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "NotAcceptable"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "415 - Unsupported media type",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "UnsupportedMediaType"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 - Internal Server Error",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "InternalServerError"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server encountered an unexpected condition which prevented it from fulfilling the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "502 - Bad Gateway",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "BadGateway"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server received an invalid response from the upstream server it accessed in attempting to fulfill the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forecasts": {
            "get": {
                "summary": "Query Forecast",
                "description": "Returns a list of forecasts.",
                "operationId": "get-forecast",
                "parameters": [
                    {
                        "name": "environmentalSegment",
                        "in": "query",
                        "description": "Environmental Segment of the search, if no segment is provided it will return all segment forecasts",
                        "schema": {
                            "enum": [
                                "air",
                                "water"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Latitude and longitude of the location,the query parameter should be in this format [latitude,longitude]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-TransactionID",
                        "in": "header",
                        "description": "Unique ID for the Integration transaction. Generated by the Integration Platform, not the consumer system.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-TrackingID",
                        "in": "header",
                        "description": "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SessionID",
                        "in": "header",
                        "description": "Consumer system's session ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-CreationTime",
                        "in": "header",
                        "description": "Format - date-time (as date-time in RFC3339). The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialSystem",
                        "in": "header",
                        "description": "The system that initiated this transaction. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialComponent",
                        "in": "header",
                        "description": "The first component that was involved in this transaction. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialOperation",
                        "in": "header",
                        "description": "The first operation that was involved in this transaction. This is optional and purely for troubleshooting / analysis purposes.may be tunneled to the provider system for fine-grained access control.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of forecasts based on query criterias",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForecastsHistory"
                                },
                                "example": {
                                    "totalRecords": 1,
                                    "records": [
                                        {
                                            "id": "15775c59-0555-4607-a419-0bc47924812b",
                                            "environmentalSegment": "air",
                                            "title": "Very Poor",
                                            "colour": "#FF0000",
                                            "since": "2019-07-14T23:00:00.0000000+00:00",
                                            "until": "2019-07-13T23:00:00.0000000+00:00",
                                            "description": "High smoke in the city due to building fire",
                                            "isActive": true,
                                            "regionName": "Melbourne",
                                            "geometry": {
                                                "type": "Point",
                                                "coordinates": [
                                                    -37.73973,
                                                    144.94615
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 - Bad Request",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "BadRequest"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The request could not be understood by the server due to invalid payload"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401 - Unauthorized",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "UnathorisedAccess"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The request requires user authentication"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 - Forbidden",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "Forbidden"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server understood the request, but is refusing to fulfill it"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404 - Resource Not Found",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "NotFound"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The URI requested is invalid or the resource requested does not exists"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405 - Method not allowed",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "MethodNotAllowed"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "A request was made of a resource using a request method not supported by that resource"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "406 - Not acceptable",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "NotAcceptable"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "415 - Unsupported media type",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "UnsupportedMediaType"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 - Internal Server Error",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "InternalServerError"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server encountered an unexpected condition which prevented it from fulfilling the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "502 - Bad Gateway",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "BadGateway"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server received an invalid response from the upstream server it accessed in attempting to fulfill the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sites": {
            "get": {
                "summary": "All Air Monitoring Sites",
                "description": "Provide a list of sites at which the EPA operated environment quality monitoring equipment for a time period. It also provides the current health advice for the sites.",
                "operationId": "get-sites-environmentalsegment",
                "parameters": [
                    {
                        "name": "environmentalSegment",
                        "in": "query",
                        "description": "Environmental Segment of the search. Valid values are air and water.",
                        "required": true,
                        "schema": {
                            "enum": [
                                "air",
                                "water"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Latitude and longitude of the location. Format - [latitude,longitude]",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-TransactionID",
                        "in": "header",
                        "description": "Unique ID for the Integration transaction. Generated by the Integration Platform, not the consumer system.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-TrackingID",
                        "in": "header",
                        "description": "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SessionID",
                        "in": "header",
                        "description": "Consumer system's session ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-CreationTime",
                        "in": "header",
                        "description": "Format - date-time (as date-time in RFC3339). The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialSystem",
                        "in": "header",
                        "description": "The system that initiated this transaction. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialComponent",
                        "in": "header",
                        "description": "The first component that was involved in this transaction. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialOperation",
                        "in": "header",
                        "description": "The first operation that was involved in this transaction. This is optional and purely for troubleshooting / analysis purposes.may be tunneled to the provider system for fine-grained access control.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of environment monitoring sites that match the query criterias",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchSiteResponse"
                                },
                                "example": {
                                    "totalRecords": 1,
                                    "records": [
                                        {
                                            "siteID": "77062cb7-3e3b-4984-b6d0-03dda76177f2",
                                            "siteName": "Alphington",
                                            "siteType": "Ambient",
                                            "geometry": {
                                                "type": "Point",
                                                "coordinates": [
                                                    -37.78,
                                                    145.023
                                                ]
                                            },
                                            "distance": {
                                                "value": 123,
                                                "unit": "metre"
                                            },
                                            "cameraImageURL": "https://cmcameras.net.au/images/Calignee/snapsho.jpg",
                                            "timeLapseURL": "https://cmcameras.net.au/ images/Calignee/video.mp4",
                                            "siteHealthAdvices": [
                                                {
                                                    "since": "2019-07-14T23:00:00.0000000+00:00",
                                                    "until": "2019-07-13T23:00:00.0000000+00:00",
                                                    "healthParameter": "2024-02-05",
                                                    "averageValue": 16,
                                                    "unit": "&micro;g/m&sup3;",
                                                    "healthAdvice": "Good",
                                                    "healthAdviceColor": "#DBDBDBD",
                                                    "healthCode": "000001"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 - Bad Request",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "BadRequest"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The request could not be understood by the server due to invalid payload"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401 - Unauthorized",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "UnathorisedAccess"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The request requires user authentication"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 - Forbidden",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "Forbidden"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server understood the request, but is refusing to fulfill it"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404 - Resource Not Found",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "NotFound"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The URI requested is invalid or the resource requested does not exists"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405 - Method not allowed",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "MethodNotAllowed"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "A request was made of a resource using a request method not supported by that resource"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "406 - Not acceptable",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "NotAcceptable"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "415 - Unsupported media type",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "UnsupportedMediaType"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 - Internal Server Error",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "InternalServerError"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server encountered an unexpected condition which prevented it from fulfilling the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "502 - Bad Gateway",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "BadGateway"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server received an invalid response from the upstream server it accessed in attempting to fulfill the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sites/parameters": {
            "get": {
                "summary": "All Air Monitoring Sites with Scientific Parameters",
                "description": "Returns the current air quality measurements for all parameters and current health advice for all operating sites.",
                "operationId": "get-all-parameters-all-sites",
                "parameters": [
                    {
                        "name": "environmentalSegment",
                        "in": "query",
                        "description": "Environmental segment of the sites. Valid values are 'air' and 'water'",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-TransactionID",
                        "in": "header",
                        "description": "Unique ID for the Integration transaction. Generated by the Integration Platform, not the consumer system.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-TrackingID",
                        "in": "header",
                        "description": "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SessionID",
                        "in": "header",
                        "description": "Consumer system's session ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-CreationTime",
                        "in": "header",
                        "description": "Format - date-time (as date-time in RFC3339). The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialSystem",
                        "in": "header",
                        "description": "The system that initiated this transaction. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialComponent",
                        "in": "header",
                        "description": "The first component that was involved in this transaction. This is optional and purely for troubleshooting / analysis purposes.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-InitialOperation",
                        "in": "header",
                        "description": "The first operation that was involved in this transaction. This is optional and purely for troubleshooting / analysis purposes.may be tunneled to the provider system for fine-grained access control.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the current air quality measurements and health advice for all operating sites.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllSiteParametersResponse"
                                },
                                "example": {
                                    "totalRecords": 1,
                                    "records": [
                                        {
                                            "siteID": "77062cb7-3e3b-4984-b6d0-03dda76177f2",
                                            "siteName": "Alphington",
                                            "siteType": "Ambient",
                                            "geometry": {
                                                "type": "Point",
                                                "coordinates": [
                                                    -37.78,
                                                    145.023
                                                ]
                                            },
                                            "distance": {
                                                "value": 123,
                                                "unit": "metre"
                                            },
                                            "cameraImageURL": "https://cmcameras.net.au/images/Calignee/snapsho.jpg",
                                            "timeLapseURL": "https://cmcameras.net.au/ images/Calignee/video.mp4",
                                            "siteHealthAdvices": [
                                                {
                                                    "since": "2019-07-14T23:00:00.0000000+00:00",
                                                    "until": "2019-07-13T23:00:00.0000000+00:00",
                                                    "healthParameter": "2024-02-05",
                                                    "averageValue": 16,
                                                    "unit": "&micro;g/m&sup3;",
                                                    "healthAdvice": "Good",
                                                    "healthAdviceColor": "#DBDBDBD",
                                                    "healthCode": "000001"
                                                }
                                            ],
                                            "parameters": [
                                                {
                                                    "name": "O2",
                                                    "timeSeriesReadings": [
                                                        {
                                                            "timeSeriesName": "1HR_AV",
                                                            "readings": [
                                                                {
                                                                    "since": "2019-07-14T21:00:00.0000000+00:00",
                                                                    "until": "2019-07-13T22:00:00.0000000+00:00",
                                                                    "averageValue": 15,
                                                                    "unit": "ug/m3",
                                                                    "confidence": 100,
                                                                    "totalSample": 4,
                                                                    "healthAdvice": "GOOD",
                                                                    "healthAdviceColor": "#DBDBDBD",
                                                                    "healthCode": "0000001"
                                                                },
                                                                {
                                                                    "since": "2019-07-14T20:00:00.0000000+00:00",
                                                                    "until": "2019-07-13T21:00:00.0000000+00:00",
                                                                    "averageValue": 15,
                                                                    "unit": "ug/m3",
                                                                    "confidence": 100,
                                                                    "totalSample": 4,
                                                                    "healthAdvice": "GOOD",
                                                                    "healthAdviceColor": "#DBDBDBD",
                                                                    "healthCode": "0000001"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "timeSeriesName": "8HR_AV",
                                                            "readings": [
                                                                {
                                                                    "since": "2019-07-14T14:00:00.0000000+00:00",
                                                                    "until": "2019-07-14T22:00:00.0000000+00:00",
                                                                    "averageValue": 15,
                                                                    "unit": "ug/m3",
                                                                    "confidence": 100,
                                                                    "totalSample": 4,
                                                                    "healthAdvice": "GOOD",
                                                                    "healthAdviceColor": "#DBDBDBD",
                                                                    "healthCode": "0000001"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "2024-02-05",
                                                    "timeSeriesReadings": [
                                                        {
                                                            "timeSeriesName": "1HR_AV",
                                                            "readings": [
                                                                {
                                                                    "since": "2019-07-14T21:00:00.0000000+00:00",
                                                                    "until": "2019-07-14T22:00:00.0000000+00:00",
                                                                    "averageValue": 15,
                                                                    "unit": "ug/m3",
                                                                    "confidence": 100,
                                                                    "totalSample": 4,
                                                                    "healthAdvice": "GOOD",
                                                                    "healthAdviceColor": "#DBDBDBD",
                                                                    "healthCode": "0000001"
                                                                },
                                                                {
                                                                    "since": "2019-07-14T20:00:00.0000000+00:00",
                                                                    "until": "2019-07-14T21:00:00.0000000+00:00",
                                                                    "averageValue": 15,
                                                                    "unit": "ug/m3",
                                                                    "confidence": 100,
                                                                    "totalSample": 4,
                                                                    "healthAdvice": "GOOD",
                                                                    "healthAdviceColor": "#DBDBDBD",
                                                                    "healthCode": "0000001"
                                                                },
                                                                {
                                                                    "since": "2019-07-14T19:00:00.0000000+00:00",
                                                                    "until": "2019-07-14T20:00:00.0000000+00:00",
                                                                    "averageValue": 15,
                                                                    "unit": "ug/m3",
                                                                    "confidence": 100,
                                                                    "totalSample": 4,
                                                                    "healthAdvice": "GOOD",
                                                                    "healthAdviceColor": "#DBDBDBD",
                                                                    "healthCode": "0000001"
                                                                },
                                                                {
                                                                    "since": "2019-07-14T18:00:00.0000000+00:00",
                                                                    "until": "2019-07-14T19:00:00.0000000+00:00",
                                                                    "averageValue": 15,
                                                                    "unit": "ug/m3",
                                                                    "confidence": 100,
                                                                    "totalSample": 4,
                                                                    "healthAdvice": "GOOD",
                                                                    "healthAdviceColor": "#DBDBDBD",
                                                                    "healthCode": "0000001"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "timeSeriesName": "24HR_AV",
                                                            "readings": [
                                                                {
                                                                    "since": "2019-07-13T22:00:00.0000000+00:00",
                                                                    "until": "2019-07-14T22:00:00.0000000+00:00",
                                                                    "averageValue": 15,
                                                                    "unit": "ug/m3",
                                                                    "confidence": 100,
                                                                    "totalSample": 4,
                                                                    "healthAdvice": "GOOD",
                                                                    "healthAdviceColor": "#DBDBDBD",
                                                                    "healthCode": "0000001"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "400 - Bad Request",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "BadRequest"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The request could not be understood by the server due to invalid payload"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "401 - Unauthorized",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "UnathorisedAccess"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The request requires user authentication"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "403 - Forbidden",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "Forbidden"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server understood the request, but is refusing to fulfill it"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "404 - Resource Not Found",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "NotFound"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The URI requested is invalid or the resource requested does not exists"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "405 - Method not allowed",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "MethodNotAllowed"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "A request was made of a resource using a request method not supported by that resource"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "406 - Not acceptable",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "NotAcceptable"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "415 - Unsupported media type",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "UnsupportedMediaType"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "500 - Internal Server Error",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "InternalServerError"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server encountered an unexpected condition which prevented it from fulfilling the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "502 - Bad Gateway",
                        "content": {
                            "errorCode": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "BadGateway"
                            },
                            "errorDescription": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": "The server received an invalid response from the upstream server it accessed in attempting to fulfill the request"
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "errorCode": "string",
                                    "errorDescription": "string",
                                    "details": [
                                        {
                                            "code": "string",
                                            "description": "string",
                                            "severity": "Low"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "SearchSiteResponse": {
                "type": "object",
                "properties": {
                    "totalRecords": {
                        "type": "integer",
                        "description": "The total number of environment monitoring sites retrieved by the search criteria",
                        "example": 2
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SiteResponse"
                        },
                        "description": "Array of the environment monitoring sites retrieved by the search criteria"
                    }
                },
                "example": {
                    "totalRecords": 1,
                    "records": [
                        {
                            "siteID": "77062cb7-3e3b-4984-b6d0-03dda76177f2",
                            "siteName": "Alphington",
                            "siteType": "Ambient",
                            "geometry": {
                                "type": "Point",
                                "coordinates": [
                                    -37.78,
                                    145.023
                                ]
                            },
                            "distance": {
                                "value": 123,
                                "unit": "metre"
                            },
                            "cameraImageURL": "https://cmcameras.net.au/images/Calignee/snapsho.jpg",
                            "timeLapseURL": "https://cmcameras.net.au/ images/Calignee/video.mp4",
                            "siteHealthAdvices": [
                                {
                                    "since": "2019-07-14T23:00:00.0000000+00:00",
                                    "until": "2019-07-13T23:00:00.0000000+00:00",
                                    "healthParameter": "2024-02-05",
                                    "averageValue": 16,
                                    "unit": "&micro;g/m&sup3;",
                                    "healthAdvice": "Good",
                                    "healthAdviceColor": "#DBDBDBD",
                                    "healthCode": "000001"
                                }
                            ]
                        }
                    ]
                }
            },
            "SiteResponse": {
                "type": "object",
                "properties": {
                    "siteID": {
                        "type": "string",
                        "description": "A 36 digit unique id used to identify a particular site, format:xxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx",
                        "example": "b01407a1-62cd-4385-a526-9384fb99d7db"
                    },
                    "siteName": {
                        "type": "string",
                        "description": "Name of the site",
                        "example": "Alphington"
                    },
                    "siteType": {
                        "type": "string",
                        "description": "Type of the site",
                        "example": "Ambient"
                    },
                    "geometry": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Geometry"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "coordinates": {
                                        "$ref": "#/components/schemas/Point3D"
                                    }
                                }
                            }
                        ],
                        "description": "GeoJSon geometry"
                    },
                    "distance": {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "number",
                                "description": "Distance from the provided location, this will be returned only when location is provided in query params in the request",
                                "example": 123
                            },
                            "unit": {
                                "type": "string",
                                "description": "Unit of distance",
                                "example": "metre"
                            }
                        }
                    },
                    "cameraImageURL": {
                        "type": "string",
                        "description": "URL of the camera image",
                        "example": "https://cmcameras.net.au/images/Calignee/snapsho.jpg"
                    },
                    "timeLapseURL": {
                        "type": "string",
                        "description": "URL of the time lapse image",
                        "example": "https://cmcameras.net.au/ images/Calignee/video.mp4"
                    },
                    "siteHealthAdvices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SiteHealthReadings"
                        },
                        "description": "Array of the site health advices."
                    }
                }
            },
            "Geometry": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Point",
                            "LineString",
                            "Polygon",
                            "MultiPoint",
                            "MultiLineString",
                            "MultiPolygon"
                        ],
                        "type": "string",
                        "description": "the geometry type"
                    }
                },
                "description": "GeoJSon geometry",
                "discriminator": {
                    "propertyName": "type"
                },
                "externalDocs": {
                    "url": "http://geojson.org/geojson-spec.html#geometry-objects"
                }
            },
            "Point": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    {
                        "properties": {
                            "coordinates": {
                                "$ref": "#/components/schemas/Point3D"
                            }
                        }
                    }
                ],
                "description": "GeoJSon geometry"
            },
            "Point3D": {
                "maxItems": 3,
                "minItems": 2,
                "type": "array",
                "items": {
                    "type": "number"
                },
                "description": "Point in 3D space",
                "example": [
                    -37.73973,
                    144.94615
                ]
            },
            "LineString": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    {
                        "properties": {
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Point3D"
                                }
                            }
                        }
                    }
                ],
                "description": "GeoJSon geometry"
            },
            "Polygon": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    {
                        "properties": {
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Point3D"
                                    }
                                }
                            }
                        }
                    }
                ],
                "description": "GeoJSon geometry"
            },
            "MultiPoint": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    {
                        "properties": {
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Point3D"
                                }
                            }
                        }
                    }
                ],
                "description": "GeoJSon geometry"
            },
            "MultiLineString": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    {
                        "properties": {
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Point3D"
                                    }
                                }
                            }
                        }
                    }
                ],
                "description": "GeoJSon geometry"
            },
            "MultiPolygon": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Geometry"
                    },
                    {
                        "properties": {
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Point3D"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "description": "GeoJSon geometry"
            },
            "SiteHealthReadings": {
                "type": "object",
                "properties": {
                    "since": {
                        "type": "string",
                        "description": "Start dateTime of the reading in UTC",
                        "format": "dateTime",
                        "example": "2019-07-14T23:00:00Z"
                    },
                    "until": {
                        "type": "string",
                        "description": "End dateTime of the reading in UTC",
                        "format": "dateTime",
                        "example": "2019-07-13T23:00:00Z"
                    },
                    "healthParameter": {
                        "type": "string",
                        "description": "Name of the scientific paramter used for this reading",
                        "example": "CO2"
                    },
                    "averageValue": {
                        "type": "integer",
                        "description": "Value of the scientific parameter reading",
                        "example": 80
                    },
                    "unit": {
                        "type": "string",
                        "description": "unit of the parameter quantity",
                        "example": "&micro;g/m&sup3;"
                    },
                    "healthAdvice": {
                        "type": "string",
                        "description": "Health advice based on the reading",
                        "example": "Good"
                    },
                    "healthAdviceColor": {
                        "type": "string",
                        "description": "Color to indicate the health status",
                        "example": "#DBDBDBD"
                    },
                    "healthCode": {
                        "type": "string",
                        "description": "Health advice code",
                        "example": "000001"
                    }
                }
            },
            "Error": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Human-readable description of the error (API-specific). Prefer textual codes over numerical ones, e.g. CustomerAccountNotFound vs. C0123"
                    },
                    "errorDescription": {
                        "type": "string",
                        "description": "Human-readable description of the error"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Machine-readable description of the sub-error (API-specific)."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Human-readable description of the sub-error."
                                },
                                "severity": {
                                    "enum": [
                                        "Low",
                                        "Medium",
                                        "High"
                                    ],
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "AllSiteParametersResponse": {
                "type": "object",
                "properties": {
                    "totalRecords": {
                        "type": "integer",
                        "description": "The total number of environment monitoring sites, retrieved by the search criteria",
                        "example": 1
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SiteParametersResponse"
                        },
                        "description": "Array of the environment monitoring sites retrieved by the search criteria"
                    }
                },
                "example": {
                    "totalRecords": 1,
                    "records": [
                        {
                            "siteID": "77062cb7-3e3b-4984-b6d0-03dda76177f2",
                            "siteName": "Alphington",
                            "siteType": "Ambient",
                            "geometry": {
                                "type": "Point",
                                "coordinates": [
                                    -37.78,
                                    145.023
                                ]
                            },
                            "distance": {
                                "value": 123,
                                "unit": "metre"
                            },
                            "cameraImageURL": "https://cmcameras.net.au/images/Calignee/snapsho.jpg",
                            "timeLapseURL": "https://cmcameras.net.au/ images/Calignee/video.mp4",
                            "siteHealthAdvices": [
                                {
                                    "since": "2019-07-14T23:00:00.0000000+00:00",
                                    "until": "2019-07-13T23:00:00.0000000+00:00",
                                    "healthParameter": "2024-02-05",
                                    "averageValue": 16,
                                    "unit": "&micro;g/m&sup3;",
                                    "healthAdvice": "Good",
                                    "healthAdviceColor": "#DBDBDBD",
                                    "healthCode": "000001"
                                }
                            ],
                            "parameters": [
                                {
                                    "name": "O2",
                                    "timeSeriesReadings": [
                                        {
                                            "timeSeriesName": "1HR_AV",
                                            "readings": [
                                                {
                                                    "since": "2019-07-14T21:00:00.0000000+00:00",
                                                    "until": "2019-07-13T22:00:00.0000000+00:00",
                                                    "averageValue": 15,
                                                    "unit": "ug/m3",
                                                    "confidence": 100,
                                                    "totalSample": 4,
                                                    "healthAdvice": "GOOD",
                                                    "healthAdviceColor": "#DBDBDBD",
                                                    "healthCode": "0000001"
                                                },
                                                {
                                                    "since": "2019-07-14T20:00:00.0000000+00:00",
                                                    "until": "2019-07-13T21:00:00.0000000+00:00",
                                                    "averageValue": 15,
                                                    "unit": "ug/m3",
                                                    "confidence": 100,
                                                    "totalSample": 4,
                                                    "healthAdvice": "GOOD",
                                                    "healthAdviceColor": "#DBDBDBD",
                                                    "healthCode": "0000001"
                                                }
                                            ]
                                        },
                                        {
                                            "timeSeriesName": "8HR_AV",
                                            "readings": [
                                                {
                                                    "since": "2019-07-14T14:00:00.0000000+00:00",
                                                    "until": "2019-07-14T22:00:00.0000000+00:00",
                                                    "averageValue": 15,
                                                    "unit": "ug/m3",
                                                    "confidence": 100,
                                                    "totalSample": 4,
                                                    "healthAdvice": "GOOD",
                                                    "healthAdviceColor": "#DBDBDBD",
                                                    "healthCode": "0000001"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "2024-02-05",
                                    "timeSeriesReadings": [
                                        {
                                            "timeSeriesName": "1HR_AV",
                                            "readings": [
                                                {
                                                    "since": "2019-07-14T21:00:00.0000000+00:00",
                                                    "until": "2019-07-14T22:00:00.0000000+00:00",
                                                    "averageValue": 15,
                                                    "unit": "ug/m3",
                                                    "confidence": 100,
                                                    "totalSample": 4,
                                                    "healthAdvice": "GOOD",
                                                    "healthAdviceColor": "#DBDBDBD",
                                                    "healthCode": "0000001"
                                                },
                                                {
                                                    "since": "2019-07-14T20:00:00.0000000+00:00",
                                                    "until": "2019-07-14T21:00:00.0000000+00:00",
                                                    "averageValue": 15,
                                                    "unit": "ug/m3",
                                                    "confidence": 100,
                                                    "totalSample": 4,
                                                    "healthAdvice": "GOOD",
                                                    "healthAdviceColor": "#DBDBDBD",
                                                    "healthCode": "0000001"
                                                },
                                                {
                                                    "since": "2019-07-14T19:00:00.0000000+00:00",
                                                    "until": "2019-07-14T20:00:00.0000000+00:00",
                                                    "averageValue": 15,
                                                    "unit": "ug/m3",
                                                    "confidence": 100,
                                                    "totalSample": 4,
                                                    "healthAdvice": "GOOD",
                                                    "healthAdviceColor": "#DBDBDBD",
                                                    "healthCode": "0000001"
                                                },
                                                {
                                                    "since": "2019-07-14T18:00:00.0000000+00:00",
                                                    "until": "2019-07-14T19:00:00.0000000+00:00",
                                                    "averageValue": 15,
                                                    "unit": "ug/m3",
                                                    "confidence": 100,
                                                    "totalSample": 4,
                                                    "healthAdvice": "GOOD",
                                                    "healthAdviceColor": "#DBDBDBD",
                                                    "healthCode": "0000001"
                                                }
                                            ]
                                        },
                                        {
                                            "timeSeriesName": "24HR_AV",
                                            "readings": [
                                                {
                                                    "since": "2019-07-13T22:00:00.0000000+00:00",
                                                    "until": "2019-07-14T22:00:00.0000000+00:00",
                                                    "averageValue": 15,
                                                    "unit": "ug/m3",
                                                    "confidence": 100,
                                                    "totalSample": 4,
                                                    "healthAdvice": "GOOD",
                                                    "healthAdviceColor": "#DBDBDBD",
                                                    "healthCode": "0000001"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            "SiteParametersResponse": {
                "title": "Site Parameters Response",
                "type": "object",
                "properties": {
                    "siteID": {
                        "type": "string",
                        "description": "Unique id associated with every site",
                        "example": "77062cb7-3e3b-4984-b6d0-03dda76177f2"
                    },
                    "siteName": {
                        "type": "string",
                        "description": "Name of the site",
                        "example": "Alphington"
                    },
                    "siteType": {
                        "type": "string",
                        "description": "Type of the site",
                        "example": "Ambient"
                    },
                    "geometry": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Geometry"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "coordinates": {
                                        "$ref": "#/components/schemas/Point3D"
                                    }
                                }
                            }
                        ],
                        "description": "GeoJSon geometry"
                    },
                    "distance": {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "number",
                                "description": "Distance from the provided location,this will be available only when location is provided in query params in the request",
                                "example": 123
                            },
                            "unit": {
                                "type": "string",
                                "description": "Unit of distance",
                                "example": "metre"
                            }
                        }
                    },
                    "cameraImageURL": {
                        "type": "string",
                        "description": "URL of the camera image",
                        "example": "https://cmcameras.net.au/images/Calignee/snapsho.jpg"
                    },
                    "timeLapseURL": {
                        "type": "string",
                        "description": "URL of the time lapse image",
                        "example": "https://cmcameras.net.au/ images/Calignee/video.mp4"
                    },
                    "siteHealthAdvices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SiteHealthReadings"
                        },
                        "description": "Array of the site health advices for that site"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Parameters"
                        },
                        "description": "Array of the different parameters for the site"
                    }
                }
            },
            "Parameters": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the parameter",
                        "example": "SO2"
                    },
                    "timeSeriesReadings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TimeSeriesReading"
                        },
                        "description": "Array of the paramater's scientific readings in a timeline"
                    }
                }
            },
            "TimeSeriesReading": {
                "type": "object",
                "properties": {
                    "timeSeriesName": {
                        "type": "string",
                        "description": "Time period for readings. Valid values: 1HR_AV, 8HR_AV, 24HR_AV",
                        "example": "1HR_AV"
                    },
                    "readings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Readings"
                        },
                        "description": "Array of the scientific readings for a paramters in a timeline"
                    }
                }
            },
            "Readings": {
                "type": "object",
                "properties": {
                    "since": {
                        "type": "string",
                        "description": "Start dateTime of the reading in UTC",
                        "format": "dateTime",
                        "example": "2019-07-14T23:00:00Z"
                    },
                    "until": {
                        "type": "string",
                        "description": "End dateTime of the reading in UTC",
                        "format": "dateTime",
                        "example": "2019-07-13T23:00:00Z"
                    },
                    "averageValue": {
                        "type": "integer",
                        "description": "Average value of the reading over the given period of time",
                        "example": 22
                    },
                    "unit": {
                        "type": "string",
                        "description": "Unit of measurement of the values provided by the reading",
                        "example": "ppb"
                    },
                    "confidence": {
                        "type": "integer",
                        "description": "Confidence percentage of the reading",
                        "example": 100
                    },
                    "totalSample": {
                        "type": "integer",
                        "description": "Number of samples collected",
                        "example": 8
                    },
                    "healthAdvice": {
                        "type": "string",
                        "description": "Health advice based on the reading",
                        "example": "GOOD"
                    },
                    "healthAdviceColor": {
                        "type": "string",
                        "description": "Color to indicate the health",
                        "example": "#DBDBDBD"
                    },
                    "healthCode": {
                        "type": "string",
                        "description": "Health advice code",
                        "example": "000001"
                    }
                }
            },
            "NoticesHistory": {
                "type": "object",
                "properties": {
                    "totalRecords": {
                        "type": "integer",
                        "description": "The total number of notices retrieved by the search criteria",
                        "example": 1
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Notices"
                        },
                        "description": "Array of notices"
                    }
                }
            },
            "Notices": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for notices",
                        "example": "1afd9459-7e5c-486c-bffc-2b91cacdda16"
                    },
                    "environmentalSegment": {
                        "type": "string",
                        "description": "Environment Segment for which the notice is issued. Valid values: air and water",
                        "example": "air"
                    },
                    "since": {
                        "type": "string",
                        "description": "Start dateTime of the notice in UTC",
                        "format": "dateTime",
                        "example": "2019-09-28T01:59:59Z"
                    },
                    "until": {
                        "type": "string",
                        "description": "Expiry dateTime of the notice in UTC",
                        "format": "dateTime",
                        "example": "2019-09-28T01:59:59Z"
                    },
                    "shortDescription": {
                        "type": "string",
                        "description": "Short description of the notice",
                        "example": "Station offline in Churchill due to technical difficulties"
                    },
                    "longDescription": {
                        "type": "string",
                        "description": "Detailed description of the notice",
                        "example": "<b>Churchill:</b> Monitoring for PM2.5 is offline due to technical difficulties and PM2.5 data is not being collected at this station. EPA technicians are working to fix the problem."
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Notice status. Indicates if the notice is active or expired.",
                        "example": true
                    },
                    "sortOrder": {
                        "type": "integer",
                        "description": "Priority of the notice",
                        "example": 125
                    },
                    "geometry": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Geometry"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "coordinates": {
                                        "$ref": "#/components/schemas/Point3D"
                                    }
                                }
                            }
                        ],
                        "description": "GeoJSon geometry"
                    }
                }
            },
            "ForecastsHistory": {
                "type": "object",
                "properties": {
                    "totalRecords": {
                        "type": "integer",
                        "description": "The total number of forecasts retrieved by the search criteria",
                        "example": 1
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Forecasts"
                        },
                        "description": "Array of Forecasts"
                    }
                }
            },
            "Forecasts": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for forecasts",
                        "example": "15775c59-0555-4607-a419-0bc47924812b"
                    },
                    "environmentalSegment": {
                        "type": "string",
                        "description": "Environment Segment for which the forecast is issued",
                        "example": "air"
                    },
                    "title": {
                        "type": "string",
                        "description": "Health status indicator",
                        "example": "Very Poor"
                    },
                    "colour": {
                        "type": "string",
                        "description": "Colour to indicate the health status",
                        "example": "#FF0000"
                    },
                    "since": {
                        "type": "string",
                        "description": "Start dateTime of the forecast in UTC",
                        "format": "dateTime",
                        "example": "2019-07-14T23:00:00Z"
                    },
                    "until": {
                        "type": "string",
                        "description": "Expiry dateTime of the forecast in UTC",
                        "format": "dateTime",
                        "example": "2019-07-13T23:00:00Z"
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of the forecasts",
                        "example": "High smoke in the city due to building fire"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Forecast status",
                        "example": true
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Area for the forecast",
                        "example": "Melbourne"
                    },
                    "geometry": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Geometry"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "coordinates": {
                                        "$ref": "#/components/schemas/Point3D"
                                    }
                                }
                            }
                        ],
                        "description": "GeoJSon geometry"
                    }
                }
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "X-API-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "X-API-Key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}